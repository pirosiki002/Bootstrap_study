<Activity mc:Ignorable="sap sap2010" x:Class="GetTransactionData" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="トランザクション アイテムのシーケンシャル カウンターです。" Name="in_TransactionNumber" Type="InArgument(x:Int32)" />
    <x:Property sap2010:Annotation.AnnotationText="プロセスの構成データ (設定、定数、およびアセット) を格納するディクショナリ構造です。" Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property sap2010:Annotation.AnnotationText="処理されるトランザクション アイテムです。" Name="out_TransactionItem" Type="OutArgument(ui:QueueItem)" />
    <x:Property sap2010:Annotation.AnnotationText="トランザクション アイテムの情報をオプションで追加できます。" Name="out_TransactionField1" Type="OutArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="トランザクション アイテムの情報をオプションで追加できます。" Name="out_TransactionField2" Type="OutArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="情報提供とログのために使用されるトランザクション ID です。この ID はトランザクションごとに一意にすることをお勧めします。" Name="out_TransactionID" Type="OutArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="スプレッドシートから取得した後など、トランザクションを DataTable に保存する場合はこの変数を使用できます。" Name="io_TransactionData" Type="InOutArgument(sd:DataTable)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>546,1364</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>GetTransactionData_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Microsoft.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>Microsoft.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="指定されたソース (Orchestrator キュー、スプレッドシート、データベース、メールボックス、または Web API) からトランザクション アイテムを取得します。&#xA;&#xA;残りのトランザクション アイテムがない場合は out_TransactionItem を Nothing に設定し、[プロセスを終了] ステートに遷移します。&#xA;&#xA;繰り返しのないプロセスなどでトランザクションが 1 つしかない場合は、[条件分岐] アクティビティを使って引数 in_TransactionNumber の値が 1 である (そのトランザクションが最初で唯一のものであることを示します) かどうかを確認し、トランザクション アイテムを out_TransactionItem に代入します。in_TransactionNumber の値が 1 以外のときは、out_TransactionItem を Nothing に設定します。&#xA;&#xA;トランザクションが複数ある場合は、引数 in_TransactionNumber をインデックスとして使い、処理対象の正しいトランザクションを取得します。残りのトランザクションがなくなったら、out_TransactionItem を Nothing に設定し、プロセスを終了します。" DisplayName="トランザクション データを取得" sap:VirtualizedContainerService.HintSize="526,1264" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:GetQueueItem ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="指定された Orchestrator キューからトランザクション アイテムを取得します。&#xA;このプロセスでキューを使用しない場合は、このアクティビティを適切なロジックに置き換えてトランザクション アイテムを取得してください。&#xA;たとえば、トランザクションが DataTable の行に含まれる場合は、現在のトランザクションに対応する行をここで取得します。" DisplayName="トランザクション アイテムを取得" sap:VirtualizedContainerService.HintSize="484,234" sap2010:WorkflowViewState.IdRef="GetQueueItem_1" QueueType="[in_Config(&quot;OrchestratorQueueName&quot;).ToString]" TransactionItem="[out_TransactionItem]">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:GetQueueItem>
    <If sap2010:Annotation.AnnotationText="このオプションのステップを使って、主にログと可視化のため、トランザクション アイテムの補足情報を追加できます。&#xA;たとえばトランザクション アイテムが請求書である場合は、out_TransactionID に請求書番号、out_TransactionField1 に請求日、out_TransactionField2 に請求金額を代入できます。" Condition="[out_TransactionItem isNot Nothing]" DisplayName="新しいトランザクション アイテムを取得した場合、その補足情報を取得" sap:VirtualizedContainerService.HintSize="484,652.666666666667" sap2010:WorkflowViewState.IdRef="If_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap2010:Annotation.AnnotationText="トランザクションを識別する追加のログ フィールドにデータを書き込みます。" DisplayName="トランザクション情報をログ フィールドに追加" sap:VirtualizedContainerService.HintSize="304,403.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign DisplayName="out_TransactionID に代入" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_5">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[out_TransactionID]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[now.ToString]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="out_TransactionField1 に代入" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_6">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[out_TransactionField1]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[string.Empty]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign DisplayName="out_TransactionField2 に代入" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_7">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[out_TransactionField2]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[string.Empty]</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Then>
    </If>
  </Sequence>
</Activity>